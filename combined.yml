# Deployment for instance 1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-web-app-instance1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-web-app
      version: instance1
  template:
    metadata:
      labels:
        app: go-web-app
        version: instance1
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - go-web-app
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: "go-web-app-sa"
      containers:
            - name: go-web-app
              image: docker.io/pebcac/ocwebsvc:0.5
              ports:
              - containerPort: 8080
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: HOSTNAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
              resources:
                limits:
                  cpu: "1"
                  memory: "1Gi"
                requests:
                  cpu: "0.5"
                  memory: "512Mi"

---
# Service for instance 1
apiVersion: v1
kind: Service
metadata:
  name: go-web-app-service-instance1
spec:
  selector:
    app: go-web-app
    version: instance1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Deployment for instance 2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-web-app-instance2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-web-app
      version: instance2
  template:
    metadata:
      labels:
        app: go-web-app
        version: instance2
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - go-web-app
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: "go-web-app-sa"
      containers:
            - name: go-web-app
              image: docker.io/pebcac/ocwebsvc:0.5
              ports:
              - containerPort: 8080
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: HOSTNAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
              resources:
                limits:
                  cpu: "1"
                  memory: "1Gi"
                requests:
                  cpu: "0.5"
                  memory: "512Mi"

---
# Service for instance 2
apiVersion: v1
kind: Service
metadata:
  name: go-web-app-service-instance2
spec:
  selector:
    app: go-web-app
    version: instance2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
# Route for combined service
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: lb50
  namespace: test
spec:
  host: lb50-test.apps.ocp.pebcac.org
  to:
    kind: Service
    name: go-web-app-service-instance1 # Default service
    weight: 50
  alternateBackends:
    - kind: Service
      name: go-web-app-service-instance2
      weight: 50
  port:
    targetPort: 8080
  wildcardPolicy: None

